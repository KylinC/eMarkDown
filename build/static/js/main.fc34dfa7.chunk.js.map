{"version":3,"sources":["utils/helper.js","utils/fileHelper.js","hooks/useKeyPress.js","hooks/useIpcRenderer.js","components/FileSearch.js","hooks/useContextMenu.js","components/FileList.js","components/BottomBtn.js","components/TabList.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["objToArr","obj","Object","keys","map","key","getParentNode","node","parentClassName","current","classList","contains","parentNode","fs","window","require","promises","fileHelper","readFile","path","encoding","writeFile","content","renameFile","newPath","rename","deleteFile","unlink","useKeyPress","targetKeyCode","useState","keyPressed","setKeyPressed","keyDownHandler","keyCode","keyUpHandler","useEffect","document","addEventListener","removeEventListener","ipcRenderer","useIpcRenderer","keyCallbackMap","forEach","on","removeListener","FileSearch","title","onFileSearch","inputActive","setInputActive","value","setValue","enterPressed","escPressed","useRef","startSearch","closeSearch","focus","className","type","onClick","size","icon","faSearch","ref","onChange","e","target","faTimes","defaultProps","remote","Menu","MenuItem","useContextMenu","itemArr","targetSelector","deps","clickedElement","menu","item","append","handleContextMenu","querySelector","popup","getCurrentWindow","FileList","files","onFileClick","onSaveEdit","onFileDelete","editStatus","setEditStatus","editItem","isNew","id","clickedItem","label","click","parentElement","dataset","newFile","find","file","trim","data-id","data-title","faMarkdown","placeholder","ButtonBtn","text","colorClass","onBtnClick","TabList","activeId","unsaveIds","onTabClick","onCloseTab","withUnsavedMark","includes","fClassName","classNames","href","preventDefault","stopPropagation","Loader","role","join","basename","extname","dirname","Store","fileStore","settingsStore","name","getAutoSync","every","get","saveFilesToStore","fileStoreObj","reduce","result","createAt","isSynced","updatedAt","set","App","setFiles","activeFileID","setActiveFileID","openedFileIDs","setOpenedFileIDs","unsavedFileIDs","setUnsavedFileIDs","isLoading","setLoading","searchedFiles","setSearchedFiles","openedFiles","openID","filesArr","savedLocation","app","getPath","activeFile","fileListArr","length","tabClose","tabsWithout","filter","fileID","createNewFile","newID","uuidv4","body","Date","getTime","importFiles","dialog","showOpenDialog","properties","filters","extensions","then","console","log","filePaths","paths","Array","isArray","importFilesArr","values","newFiles","showMessageBox","message","catch","err","send","modifiedFile","event","currentFile","status","isLoaded","keyword","afterDelete","oldPath","faPlus","faFileImport","align","fileChange","options","minHeight","timestamp","date","toLocaleDateString","toLocaleTimeString","timestampToString","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fc34dfa7.chunk.js","sourcesContent":["export const flattenArr = (arr) => {\n    return arr.reduce((map, item) => {\n      map[item.id] = item\n      return map\n    }, {})\n  }\n  \n  export const objToArr = (obj) => {\n    return Object.keys(obj).map(key => obj[key])\n  }\n  \n  export const getParentNode = (node, parentClassName) => {\n    let current = node\n    while(current !== null) {\n      if (current.classList.contains(parentClassName)) {\n        return current\n      }\n      current = current.parentNode\n    }\n    return false\n  }\n  \n  export const timestampToString = (timestamp) => {\n    const date = new Date(timestamp)\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()\n  }","import defaultFiles from \"./defaultFiles\"\n\nconst fs = window.require('fs').promises\nconst path = window.require('path')\n\nconst fileHelper = {\n    readFile: (path)=>{\n        return fs.readFile(path,{encoding:'utf8'})\n    },\n    writeFile: (path,content)=>{\n        return fs.writeFile(path,content,{encoding:'utf8'})\n    },\n    renameFile: (path,newPath)=>{\n        return fs.rename(path,newPath)\n    },\n    deleteFile: (path)=>{\n        return fs.unlink(path)\n    }\n}\n\nexport default fileHelper","import {useState, useEffect} from 'react'\n\nconst useKeyPress = (targetKeyCode) => {\n    const [keyPressed,setKeyPressed] = useState(false)\n\n    const keyDownHandler = ({keyCode}) => {\n        if(keyCode==targetKeyCode)\n        setKeyPressed(true)\n    }\n    const keyUpHandler = ({keyCode}) => {\n        if(keyCode==targetKeyCode)\n        setKeyPressed(false)\n    }\n    useEffect(()=>{\n        document.addEventListener('keydown',keyDownHandler)\n        document.addEventListener('keyup',keyUpHandler)\n        return () => {\n            document.removeEventListener('keydown',keyDownHandler)\n            document.removeEventListener('keyup',keyUpHandler)\n        }\n    },[])\n    return keyPressed\n}\n\nexport default useKeyPress","import { useEffect } from 'react'\nconst { ipcRenderer } = window.require('electron')\n\n\nconst useIpcRenderer = (keyCallbackMap) => {\n  useEffect(() => {\n    Object.keys(keyCallbackMap).forEach(key => {\n      ipcRenderer.on(key, keyCallbackMap[key])\n    })\n    return () => {\n      Object.keys(keyCallbackMap).forEach(key => {\n        ipcRenderer.removeListener(key, keyCallbackMap[key])\n      })\n    }\n  })\n}\n\nexport default useIpcRenderer","import React, {useState, useEffect, useRef} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch,faTimes } from '@fortawesome/free-solid-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress'\nimport useIpcRenderer from '../hooks/useIpcRenderer'\n\nconst FileSearch = ({title, onFileSearch}) => {\n    const [inputActive, setInputActive] = useState(false)\n    const [value, setValue] = useState('')\n    const enterPressed = useKeyPress(13)\n    const escPressed = useKeyPress(27)\n    let node = useRef(null)\n    const startSearch = () => {\n        setInputActive(true)\n    }\n    const closeSearch = ()=>{\n        setInputActive(false)\n        setValue('')\n        onFileSearch('')\n    }\n    useIpcRenderer({\n        'search-file': startSearch\n    })\n    useEffect(()=>{\n        if(enterPressed && inputActive){\n            onFileSearch(value)\n        }\n        if(escPressed && inputActive){\n            closeSearch()\n        }\n    })\n    useEffect(()=>{\n        if(inputActive){\n            node.current.focus()\n        }\n    },[inputActive])\n    return (\n        <div className=\"alert alert-primary mb-0\">\n            { !inputActive && \n              <div className=\"d-flex justify-content-between align-items-center mb-0\">\n                  <span>{title}</span>\n                  <button type=\"button\" \n                  className='icon-button'\n                  onClick={startSearch}>\n                      <FontAwesomeIcon size=\"lg\" title=\"search\" icon={faSearch} />\n                  </button>\n              </div>\n            }\n            {\n                inputActive &&\n                <div className=\"d-flex justify-content-between align-items-center mb-0\">\n                    <input \n                      className=\"form-control\"\n                      value={value}\n                      ref = {node}\n                      onChange={(e) => {setValue(e.target.value)}}\n                    />\n                    <button type=\"button\" \n                    className='icon-button'\n                    onClick={closeSearch}>\n                        <FontAwesomeIcon size=\"lg\" title=\"close\" icon={faTimes} />\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}\n\nFileSearch.propTypes = {\n    title: PropTypes.string,\n    onFileSearch: PropTypes.func.isRequired,\n}\n\nFileSearch.defaultProps = {\n    title: \"default\"\n}\n\nexport default FileSearch","import {useEffect,useRef} from 'react'\nconst {remote} = window.require('electron')\nconst {Menu, MenuItem} = remote\n\nconst useContextMenu = (itemArr,targetSelector,deps) => {\n    let clickedElement = useRef(null)\n    useEffect(()=>{\n        const menu = new Menu()\n        itemArr.forEach(item => {\n            menu.append(new MenuItem(item))\n        })\n        const handleContextMenu = (e) => {\n            if (document.querySelector(targetSelector).contains(e.target)){\n                clickedElement.current = e.target\n                menu.popup({window: remote.getCurrentWindow()})\n            }\n        }\n        window.addEventListener('contextmenu',handleContextMenu)\n        return () =>{\n            window.removeEventListener('contextmenu',handleContextMenu)\n        }\n    },deps)\n    return clickedElement\n}\n\nexport default useContextMenu","import React, {useState, useEffect, useRef} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit,faTrash,faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress'\nimport useContextMenu from '../hooks/useContextMenu'\nimport {getParentNode} from '../utils/helper.js'\n\nconst {remote} = window.require('electron')\nconst {Menu, MenuItem} = remote\n\nconst FileList = ({files,onFileClick,onSaveEdit,onFileDelete}) => {\n    const [editStatus,setEditStatus]=useState(false)\n    const [value,setValue]=useState('')\n    let node = useRef(null)\n    const enterPressed = useKeyPress(13)\n    const escPressed = useKeyPress(27)\n    const closeSearch = (editItem) => {\n        setEditStatus(false)\n        setValue('')\n        if (editItem.isNew){\n            onFileDelete(editItem.id)\n        }\n    }\n    const clickedItem = useContextMenu([{\n        label: 'Open',\n        click: ()=>{\n            const parentElement = getParentNode(clickedItem.current,'file-item')\n            if(parentElement){\n                onFileClick(parentElement.dataset.id)\n            }\n        }\n    },\n    {\n        label: 'Rename',\n        click: ()=>{\n            const parentElement = getParentNode(clickedItem.current, 'file-item')\n            if (parentElement) {\n                const { id, title } = parentElement.dataset\n                setEditStatus(id)\n                setValue(title)\n            }\n        }\n    },\n    {\n        label: 'Delete',\n        click: ()=>{\n            const parentElement = getParentNode(clickedItem.current, 'file-item')\n            if (parentElement) {\n                onFileDelete(parentElement.dataset.id)\n            }\n        }\n    }\n    ],'.file-list',[files])\n    useEffect(()=>{\n        const newFile = files.find(file=>file.isNew)\n        if(newFile){\n            setEditStatus(newFile.id)\n            setValue(newFile.title)\n        }\n    },[files])\n    useEffect(() => {\n        if (editStatus) {\n          node.current.focus()\n        }\n      }, [editStatus])\n    useEffect(()=>{\n        const editItem = files.find(file => file.id === editStatus)\n        if (enterPressed && editStatus && value.trim() !== '') {\n        onSaveEdit(editItem.id, value, editItem.isNew)\n        setEditStatus(false)\n        setValue('')\n        }\n        if(escPressed && editStatus) {\n        closeSearch(editItem)\n        }\n    })\n    \n    return (\n        <ul className=\"list-group list-group-flush file-list\">\n            {    \n                files.map(file => (\n                    <li className=\"row list-group-item bg-light d-flex align-items-center file-item mx-0\"\n                        key={file.id}\n                        data-id={file.id}\n                        data-title={file.title}\n                    >\n                        { ((file.id!=editStatus) && !file.isNew) &&\n                        <>\n                            <span className=\"col-2\">\n                                <FontAwesomeIcon size=\"lg\" icon={faMarkdown} />\n                            </span>\n                            <span \n                            className=\"col-6 c-link\"\n                            onClick={()=>{onFileClick(file.id)}}\n                            >{file.title}</span>\n                            {/* <button type=\"button\" \n                            className='icon-button col-2'\n                            onClick={()=>{setEditStatus(file.id);setValue(file.title);}}>\n                                <FontAwesomeIcon size=\"lg\" title=\"edit\" icon={faEdit} />\n                            </button> */}\n                            {/* <button type=\"button\" \n                            className='icon-button col-2'\n                            onClick={()=>{onFileDelete(file.id)}}>\n                                <FontAwesomeIcon size=\"lg\" title=\"delete\" icon={faTrash} />\n                            </button> */}\n                        </>\n                        }\n                        {  ((file.id==editStatus) || file.isNew) &&\n                        <>\n                            <span className=\"col-2\">\n                            <FontAwesomeIcon size=\"lg\" icon={faMarkdown} />\n                            </span>\n                            <input \n                            className=\"form-control col-8\"\n                            value={value}\n                            ref={node}\n                            placeholder=\"untitled\"\n                            onChange={(e) => {setValue(e.target.value)}}\n                            />\n                            <button type=\"button\" \n                            className='icon-button col-2'\n                            onClick={()=>{closeSearch(file)}}>\n                                <FontAwesomeIcon size=\"lg\" title=\"close\" icon={faTimes} />\n                            </button>\n                        </>\n                        }\n                    </li>\n                ))\n            }\n        </ul>\n    )\n}\n\nFileList.propTypes={\n    files: PropTypes.array,\n    onFileClick: PropTypes.func,\n    onFileDelete: PropTypes.func,\n    onSaveEdit: PropTypes.func\n}\n\nexport default FileList","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PropTypes from 'prop-types'\n\nconst ButtonBtn = ({text,colorClass,icon,onBtnClick}) => {\n    return (\n        <button\n        type=\"button\"\n        className={`btn btn-block no-border ${colorClass}`}\n        onClick={onBtnClick}\n        >\n            <FontAwesomeIcon className=\"mr-2\" size=\"lg\" icon={icon} />\n            {text}\n        </button>\n    )\n}\n\nButtonBtn.propTypes = {\n    text: PropTypes.string,\n    colorClass: PropTypes.string,\n    // icon: PropTypes.element.isRequired,\n    onBtnClick: PropTypes.func,\n}\nButtonBtn.defaultProps = {\n    title: \"New File\"\n}\nexport default ButtonBtn","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './TabList.scss'\n\nconst TabList = ({files,activeId,unsaveIds,onTabClick,onCloseTab}) => {\n    return(\n        <ul className=\"nav nav-pills tablist-component\">\n            {files.map(file=>{\n                const withUnsavedMark = unsaveIds.includes(file.id)\n                const fClassName = classNames({\n                    'nav-link':true,\n                    'active':file.id==activeId,\n                    \"withUnsaved\" : withUnsavedMark\n                })\n                return(\n                    <li className=\"nav-item\" key={file.id}>\n                        <a href=\"#\"\n                        className={fClassName}\n                        onClick={(e)=>{e.preventDefault();onTabClick(file.id);}}\n                        >\n                            {file.title}\n                            <span \n                              className=\"ml-2 close-icon\"\n                              onClick={(e)=>{e.stopPropagation();onCloseTab(file.id);}}\n                            >\n                                <FontAwesomeIcon icon={faTimes} />\n                            </span>\n                            {\n                                withUnsavedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span>\n                            }\n                        </a>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nTabList.propTypes = {\n    files: PropTypes.array,\n    activeId: PropTypes.string,\n    unsaveIds: PropTypes.array,\n    onTabClick: PropTypes.func,\n    onCloseTab: PropTypes.func\n}\nTabList.defaultProps = {\n    unsaveIds: []\n}\nexport default TabList","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = ({ text = 'Waiting...'}) => (\n  <div className=\"loading-component text-center\">\n    <div className=\"spinner-border text-primary\" role=\"status\">\n      <span className=\"sr-only\">{text}</span>\n    </div>\n    <h5 className=\"text-primary\">{text}</h5>\n  </div>\n)\n\nexport default Loader\n","import React,{useState,useEffect} from 'react'\nimport { faPlus,faFileImport,faSave } from '@fortawesome/free-solid-svg-icons'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport uuidv4 from 'uuid/v4'\nimport {flattenArr,objToArr,timestampToString} from './utils/helper'\nimport fileHelper from './utils/fileHelper'\n\nimport FileSearch from './components/FileSearch'\nimport FileList from './components/FileList'\nimport defaultFiles from './utils/defaultFiles'\nimport ButtonBtn from './components/BottomBtn'\nimport TabList from './components/TabList'\nimport Loader from './components/Loader'\n\nimport useIpcRenderer from './hooks/useIpcRenderer'\n\nconst {join,basename,extname,dirname} = window.require('path')\nconst {remote,ipcRenderer} = window.require('electron')\nconst Store = window.require('electron-store')\n\nconst fileStore = new Store({'name':'Files Data'})\nconst settingsStore = new Store({name: 'Settings'})\nconst getAutoSync = () => ['accessKey', 'secretKey', 'bucketName', 'enableAutoSync'].every(key => !!settingsStore.get(key))\nconst saveFilesToStore = (files) => {\n  const fileStoreObj = objToArr(files).reduce((result,file)=>{\n    const {id,path,title,createAt,isSynced,updatedAt} = file\n    result[id] = {\n      id,\n      path,\n      title,\n      createAt,\n      isSynced, \n      updatedAt\n    }\n    return result\n  },{})\n  fileStore.set('files',fileStoreObj)\n}\n\nfunction App() {\n  const [files,setFiles]=useState(fileStore.get('files') || {})\n  const [activeFileID,setActiveFileID]=useState('')\n  const [openedFileIDs,setOpenedFileIDs]=useState([])\n  const [unsavedFileIDs,setUnsavedFileIDs]=useState([])\n  const [isLoading,setLoading] = useState(false)\n  const [searchedFiles,setSearchedFiles]=useState([])\n  const openedFiles = openedFileIDs.map(openID=>{\n    return files[openID]\n  })\n  const filesArr = objToArr(files)\n  const savedLocation = settingsStore.get('savedFileLocation') || remote.app.getPath('documents')\n  // console.log(filesArr)\n  const activeFile = files[activeFileID]\n  const fileListArr = (searchedFiles.length>0)?searchedFiles:filesArr\n  const fileClick = (fileID) =>{\n    setActiveFileID(fileID)\n    const currentFile = files[fileID]\n    const { id, title, path, isLoaded } = currentFile\n    if (!currentFile.isLoaded) {\n      if (getAutoSync()) {\n          ipcRenderer.send('download-file', { key: `${title}.md`, path, id })\n      } else {\n          fileHelper.readFile(currentFile.path).then(value => {\n            const newFile = { ...files[fileID], body: value, isLoaded: true }\n            setFiles({ ...files, [fileID]: newFile })\n          })\n      }\n    }\n    if(!openedFileIDs.includes(fileID)){\n      setOpenedFileIDs([ ...openedFileIDs,fileID])\n    }\n  }\n  const tabClick = (fileID)=>{\n    setActiveFileID(fileID)\n  }\n  const tabClose = (id)=>{\n    const tabsWithout = openedFileIDs.filter(fileID=>fileID!=id)\n    setOpenedFileIDs(tabsWithout)\n    if (tabsWithout.length>0){\n      setActiveFileID(tabsWithout[0])\n    }else{\n      setActiveFileID('')\n    }\n  }\n  const fileChange = (id,value)=>{\n    if (value !== files[id].body) {\n      const newFile = { ...files[id], body: value }\n      setFiles({ ...files, [id]: newFile })\n      // update unsavedIDs\n      if (!unsavedFileIDs.includes(id)) {\n        setUnsavedFileIDs([ ...unsavedFileIDs, id])\n      }\n    }\n  }\n  const deleteFile = (id)=>{\n    if (files[id].isNew) {\n      const { [id]: value, ...afterDelete } = files\n      setFiles(afterDelete)\n    } else {\n      fileHelper.deleteFile(join(savedLocation, `${files[id].title}.md`)).then(() => {\n        const { [id]: value, ...afterDelete } = files\n        setFiles(afterDelete)\n        saveFilesToStore(afterDelete)\n        // close the tab if opened\n        tabClose(id)\n      })\n    }\n  }\n  const updateFileName = (id,title,isNew) => {\n    const newPath = isNew ? join(savedLocation, `${title}.md`)\n    : join(dirname(files[id].path),`${title}.md`)\n    const modifiedFile = { ...files[id], title, isNew: false, path: newPath}\n    const newFiles = { ...files, [id]: modifiedFile }\n    if(isNew){\n      fileHelper.writeFile(newPath,files[id].body).then(()=>{\n        setFiles(newFiles)\n        saveFilesToStore(newFiles)\n      })\n    }else{\n      const oldPath = files[id].path\n\n      fileHelper.renameFile(oldPath,newPath).then(()=>{\n        setFiles(newFiles)\n        saveFilesToStore(newFiles)\n      })\n    }\n  }\n  const fileSearch = (keyword)=>{\n    const newFiles = filesArr.filter(file=>file.title.includes(keyword))\n    setSearchedFiles(newFiles)\n  }\n  const createNewFile = () =>{\n    const newID =uuidv4()\n    const newFile = \n      {\n        id: newID,\n        title: '',\n        body: '## Title',\n        createAt: new Date().getTime(),\n        isNew: true,\n      }\n    setFiles({ ...files, [newID]: newFile })\n  }\n  const saveCurrentFile = ()=>{\n    const { path, body, title } = activeFile\n    fileHelper.writeFile(activeFile.path,\n    activeFile.body).then(()=>{\n      setUnsavedFileIDs(unsavedFileIDs.filter(id=>id!=activeFile.id))\n      if (getAutoSync()) {\n        ipcRenderer.send('upload-file', {key: `${title}.md`, path })\n      }\n    })\n  }\n  const importFiles = () => {\n    remote.dialog.showOpenDialog({\n      title:\"Open MarkDown File\",\n      properties: ['openFile', 'multiSelections'],\n      filters: [\n        {name: 'Markdown files',extensions:['md']}\n      ]\n    }).then(result=>{\n      console.log(result.filePaths)\n      const paths = result.filePaths\n      if (Array.isArray(paths)) {\n        const filteredPaths = paths.filter(path => {\n          const alreadyAdded = Object.values(files).find(file => {\n            return file.path === path\n          })\n          return !alreadyAdded\n        })\n        const importFilesArr = filteredPaths.map(path => {\n          return {\n            id: uuidv4(),\n            title: basename(path, extname(path)),\n            path,\n          }\n        })\n        // get the new files object in flattenArr\n        const newFiles = { ...files, ...flattenArr(importFilesArr)}\n        // setState and update electron store\n        setFiles(newFiles)\n        saveFilesToStore(newFiles)\n        if (importFilesArr.length > 0) {\n          remote.dialog.showMessageBox({\n            type: 'info',\n            title: `Successfully ${importFilesArr.length} File(s) Imported`,\n            message: `Successfully ${importFilesArr.length} File(s) Imported`,\n          })\n        }\n      }\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n  const activeFileUploaded = () => {\n      const { id } = activeFile\n      const modifiedFile = { ...files[id], isSynced: true, updatedAt: new Date().getTime() }\n      const newFiles = { ...files, [id]: modifiedFile }\n      setFiles(newFiles)\n      saveFilesToStore(newFiles)\n  }\n  const activeFileDownloaded = (event, message) => {\n      const currentFile = files[message.id]\n      const { id, path } = currentFile\n      fileHelper.readFile(path).then(value => {\n          let newFile\n          if (message.status === 'download-success') {\n              newFile = { ...files[id], body: value, isLoaded: true, isSynced: true, updatedAt: new Date().getTime() }\n          } else {\n              newFile = { ...files[id], body: value, isLoaded: true}\n          }\n          const newFiles = { ...files, [id]: newFile }\n          setFiles(newFiles)\n          saveFilesToStore(newFiles)\n      })\n  }\n  useIpcRenderer({\n    'create-new-file': createNewFile,\n    'import-file': importFiles,\n    'save-edit-file': saveCurrentFile,\n    'active-file-uploaded': activeFileUploaded,\n    'file-downloaded': activeFileDownloaded,\n    'loading-status': (message, status) => { setLoading(status) }\n  })\n  return (\n    <div className=\"App container-fluid px-0\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 bg-light left-panel\">\n          <FileSearch \n            title=\"Doc Files\"\n            onFileSearch={fileSearch}\n          />\n          <FileList \n            files={fileListArr}\n            onFileClick={fileClick}\n            onFileDelete={deleteFile}\n            onSaveEdit={updateFileName}\n          />\n          <div className=\"row no-gutters button-group\">\n            <div className=\"col\">\n              <ButtonBtn \n                text=\"New File\"\n                colorClass=\"btn-primary\"\n                icon={faPlus}\n                onBtnClick={createNewFile}\n              />\n            </div>\n            <div className=\"col\">\n              <ButtonBtn \n                  text=\"Import\"\n                  colorClass=\"btn-success\"\n                  icon={faFileImport}\n                  onBtnClick={importFiles}\n                />\n            </div>\n            \n          </div>\n        </div>\n        <div className=\"col-9 right-panel\">\n          {!activeFile &&\n            <div className=\"start-page\">\n              <p></p>\n              <p align=\"center\">\n                  {/* <img src={require('./logo.png')} height=\"120\" /> */}\n                  eMarkDown\n              </p>\n            </div>\n          }\n          {activeFile &&\n          <>\n            <TabList \n              files={openedFiles}\n              activeId={activeFileID}\n              unsaveIds={unsavedFileIDs}\n              onTabClick={tabClick}\n              onCloseTab={tabClose}\n            />\n            <SimpleMDE \n              key={activeFile && activeFile.id}\n              value={activeFile && activeFile.body}\n              onChange={(value)=>{fileChange(activeFile.id,value)}}\n              options={{\n                minHeight: '515px'\n              }}\n            />\n            { activeFile.isSynced && \n                <span className=\"sync-status\"> Sync,Last Sync: {timestampToString(activeFile.updatedAt)}</span>\n            }\n            {/* <ButtonBtn \n              text=\"Save\"\n              colorClass=\"btn-success\"\n              icon={faSave}\n              onBtnClick={saveCurrentFile}\n            /> */}\n          </>\n          }\n        </div>\n      </div>\n      { isLoading && \n        <Loader />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}